# Generated by Django 3.0.7 on 2020-07-09 01:49

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import maps.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='give map descriptive and unique name', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='describe map and purpose')),
                ('entered', models.DateTimeField(auto_now_add=True)),
                ('center', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(default=15), default=list, help_text='latitude, longitude in decimal degrees', size=2)),
                ('zoom', models.IntegerField(default=8, help_text='initial zoom level')),
            ],
            options={
                'verbose_name_plural': 'maps',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RasterLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tileUrl', models.CharField(blank=True, help_text='Add tileset URL here, such as https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', max_length=200)),
                ('attrs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=maps.models.RasterLayer.raster_default_attrs, help_text='Insert desired fields/values or required by tileset provider here.', null=True)),
            ],
            options={
                'verbose_name_plural': 'rasters',
            },
        ),
        migrations.CreateModel(
            name='VectorLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('dataUrl', models.CharField(blank=True, help_text='Complete path including querystring if any. For local files in "data" directory, must prefix filename with "/static/data/"', max_length=200)),
                ('dataSuffix', models.CharField(blank=True, help_text='Enter filetype suffix without the period: wkt, geojson, csv, kml, topojson, gpx', max_length=12)),
                ('description', models.TextField(blank=True)),
                ('style', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=maps.models.VectorLayer.vector_default_style, help_text='key-value pairs for styling', null=True)),
            ],
            options={
                'verbose_name_plural': 'vectors',
                'ordering': ['id'],
            },
        ),
    ]
